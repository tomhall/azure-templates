{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "vmsStackName": {
        "type": "string",
        "metadata": {
          "description": "Scale Set name, also used in this template as a base for naming resources (hence limited to 9 characters or less)."
        },
        "maxLength": 10
      },
      "location":{
         "defaultValue":"Southeast Asia",
         "allowedValues":[
            "West US",
            "East US",
            "West Europe",
            "East Asia",
            "Southeast Asia"
         ],
         "type":"String",
         "metadata":{
            "description":"Azure Region"
         }
      },
      "vmStorageAccountType":{
         "defaultValue":"Standard_LRS",
         "allowedValues":[
            "Standard_LRS",
            "Premium_LRS"
         ],
         "type":"String",
         "metadata":{
            "description":"Type of the Storage Account"
         }
      },
      "vmName":{
         "type":"String",
         "metadata":{
            "description":"Name of the VM"
         }
      },
      "vmSize":{
         "defaultValue":"Standard_A2",
         "allowedValues":[
            "Standard_A0",
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4"
         ],
         "type":"String",
         "metadata":{
            "description":"Size of the VM"
         }
      },
      "adminUsername":{
         "type":"String",
         "metadata":{
            "description":"Admin username"
         }
      },
      "adminPassword":{
         "type":"SecureString",
         "metadata":{
            "description":"Admin password"
         }
      },
      "networkDnsName":{
         "type":"String",
         "metadata":{
            "description":"Unique DNS Name used to access the IIS server via HTTP or RDP."
         }
      },
      "octopusApiKey":{
         "type":"String",
         "metadata":{
            "description":"API key to talk to Octopus Deploy server with."
         }
      },
      "octopusServerUrl":{
         "type":"String",
         "metadata":{
            "description":"URL of Octopus Deploy server."
         }
      },
      "octopusEnvironments":{
         "type":"Array",
         "metadata":{
            "description":"List of environments to register the tentacle in."
         }
      },
      "octopusRoles":{
         "type":"Array",
         "metadata":{
            "description":"List of roles to register the tentacle with."
         }
      },
	  "octopusMachinePolicy":{
         "type":"String",
         "metadata":{
            "description":"The Octopus Deploy Machine Policy to assign to the new tentacle."
         }
      },
      "octopusListenPort":{
         "defaultValue":"10933",
         "type":"String",
         "metadata":{
            "description":"List of environments to register the tentacle in."
         }
      }
   },
   "variables":{
      "vmName":"[parameters('vmName')]",
      "vmStorageAccountName":"[toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))]",
      "nicName":"IISNIC",
      "virtualNetworkName":"IISVNet",
      "vnetID":"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
      "vnetAddressPrefix":"10.0.0.0/16",
      "subnet1Name":"IISSubnet-1",
      "subnet1Prefix":"10.0.0.0/24",
      "subnet1Ref":"[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
      "publicIPAddressType":"Dynamic",
      "publicIPAddressName":"IISPublicIP",
      "osType": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      },
      "IISPowerShellModuleUrl":"https://github.com/tomhall/azure-templates/raw/master/WebServerConfig.ps1.zip",
      "IISPowerShellModuleConfigurationFunction":"WebServerConfig.ps1\\WebServerConfig",
      "vmExtensionName":"dscExtension",
      "octopusDscExtension":"OctopusDSC"
   },
   "resources":[
      {
         "type":"Microsoft.Storage/storageAccounts",
         "name":"[variables('vmStorageAccountName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "accountType":"[parameters('vmStorageAccountType')]"
         }
      },
      {
         "type":"Microsoft.Network/publicIPAddresses",
         "name":"[variables('publicIPAddressName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "publicIPAllocationMethod":"[variables('publicIPAddressType')]",
            "dnsSettings":{
               "domainNameLabel":"[parameters('networkDnsName')]"
            }
         }
      },
      {
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('virtualNetworkName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('vnetAddressPrefix')]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('subnet1Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet1Prefix')]"
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[variables('nicName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                     },
                     "subnet":{
                        "id":"[variables('subnet1Ref')]"
                     }
                  }
               }
            ]
         },
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[parameters('vmName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "hardwareProfile":{
               "vmSize":"[parameters('vmSize')]"
            },
            "osProfile":{
               "computername":"[parameters('vmName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference": "[variables('osType')]",
               "osDisk":{
                  "name":"osdisk",
                  "vhd":{
                     "uri":"[concat('http://',variables('vmStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
                  },
                  "caching":"ReadWrite",
                  "createOption":"FromImage"
               }
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                  }
               ]
            }
         },
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(parameters('vmName'),'/', variables('octopusDscExtension'))]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "publisher":"Microsoft.Compute",
            "type":"CustomScriptExtension",
            "typeHandlerVersion":"1.7",
            "settings":{
               "fileUris":[
                  "https://github.com/tomhall/azure-templates/raw/master/Install-OctopusDSC.ps1"
               ],
               "commandToExecute":"powershell.exe -ExecutionPolicy Unrestricted -File Install-OctopusDSC.ps1"
            }
         },
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(parameters('vmName'),'/', variables('vmExtensionName'))]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "publisher":"Microsoft.Powershell",
            "type":"DSC",
            "typeHandlerVersion":"2.9",
            "autoUpgradeMinorVersion":true,
            "settings":{
               "ModulesUrl":"[variables('IISPowerShellModuleUrl')]",
               "SasToken":"",
               "ConfigurationFunction":"[variables('IISPowerShellModuleConfigurationFunction')]",
               "Properties":{
                  "ApiKey":"[parameters('octopusApiKey')]",
                  "OctopusServerUrl":"[parameters('octopusServerUrl')]",
                  "Environments":"[parameters('octopusEnvironments')]",
                  "Roles":"[parameters('octopusRoles')]",
				  "MachinePolicy":"[parameters('octopusMachinePolicy')]",
                  "ListenPort":"[parameters('octopusListenPort')]"
               }
            },
            "protectedSettings":null
         },
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), variables('octopusDscExtension'))]"
         ]
      }
   ]
}