{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "vmsStackName":{
         "type":"string",
         "metadata":{
            "description":"Scale Set name, also used in this template as a base for naming resources (hence limited to 9 characters or less)."
         },
         "maxLength":10
      },
	  "vmsInstanceCount":{
         "type":"int",
         "metadata":{
            "description":"The number of virtual machine instances within this scale set."
         },
		 "minValue": 1,
		 "maxValue": 10
      },
      "location":{
         "defaultValue":"Southeast Asia",
         "allowedValues":[
            "West US",
            "East US",
            "West Europe",
            "East Asia",
            "Southeast Asia"
         ],
         "type":"String",
         "metadata":{
            "description":"Azure Region"
         }
      },
      "vmStorageAccountType":{
         "defaultValue":"Standard_LRS",
         "allowedValues":[
            "Standard_LRS",
            "Premium_LRS"
         ],
         "type":"String",
         "metadata":{
            "description":"Type of the Storage Account"
         }
      },
      "vmName":{
         "type":"String",
         "metadata":{
            "description":"Name of the VM"
         }
      },
      "vmSize":{
         "defaultValue":"Standard_A2",
         "allowedValues":[
            "Standard_A0",
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4"
         ],
         "type":"String",
         "metadata":{
            "description":"Size of the VM"
         }
      },
      "adminUsername":{
         "type":"String",
         "metadata":{
            "description":"Admin username"
         }
      },
      "adminPassword":{
         "type":"SecureString",
         "metadata":{
            "description":"Admin password"
         }
      },
      "octopusApiKey":{
         "type":"String",
         "metadata":{
            "description":"API key to talk to Octopus Deploy server with."
         }
      },
      "octopusServerUrl":{
         "type":"String",
         "metadata":{
            "description":"URL of Octopus Deploy server."
         }
      },
      "octopusEnvironments":{
         "type":"Array",
         "metadata":{
            "description":"List of environments to register the tentacle in."
         }
      },
      "octopusRoles":{
         "type":"Array",
         "metadata":{
            "description":"List of roles to register the tentacle with."
         }
      },
      "octopusMachinePolicy":{
         "type":"String",
         "metadata":{
            "description":"The Octopus Deploy Machine Policy to assign to the new tentacle."
         }
      },
      "octopusListenPort":{
         "defaultValue":"10933",
         "type":"String",
         "metadata":{
            "description":"List of environments to register the tentacle in."
         }
      }
   },
   "variables":{
      "vmName":"[parameters('vmName')]",
      "loadBalancerName": "[concat(parameters('vmsStackName'), 'lb')]",
	  "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
	  "frontEndIPConfigID": "[concat(variables('lbID'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
	  "backEndIPConfigID": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackEnd')]",
	  "nicName":"[concat(parameters('vmsStackName'), 'nic')]",
      "virtualNetworkName":"[concat(parameters('vmsStackName'), 'vnet')]",
      "vnetId":"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
      "vnetAddressPrefix":"10.0.0.0/16",
      "subnet1Name":"[concat(parameters('vmsStackName'), 'subnet')]",
      "subnet1Prefix":"10.0.0.0/24",
      "subnet1Ref":"[concat(variables('vnetId'),'/subnets/', variables('subnet1Name'))]",
      "publicIPAddressType":"Dynamic",
      "publicIPAddressName":"[concat(parameters('vmsStackName'), 'pip')]",
      "osType":{
         "publisher":"MicrosoftWindowsServer",
         "offer":"WindowsServer",
         "sku":"2012-R2-Datacenter",
         "version":"latest"
      },
      "uniqueStringArray":[
         "[toLower(concat(parameters('vmsStackName'), uniqueString(concat(resourceGroup().id, '0'))))]",
         "[toLower(concat(parameters('vmsStackName'), uniqueString(concat(resourceGroup().id, '1'))))]",
         "[toLower(concat(parameters('vmsStackName'), uniqueString(concat(resourceGroup().id, '2'))))]",
         "[toLower(concat(parameters('vmsStackName'), uniqueString(concat(resourceGroup().id, '3'))))]",
         "[toLower(concat(parameters('vmsStackName'), uniqueString(concat(resourceGroup().id, '4'))))]"
      ],
	  "vhdContainerName": "[concat(parameters('vmsStackName'), 'vhd')]",
	  "osDiskName": "[concat(parameters('vmsStackName'), 'osdisk')]",
      "IISPowerShellModuleUrl":"https://github.com/tomhall/azure-templates/raw/master/WebServerConfig.ps1.zip",
      "IISPowerShellModuleConfigurationFunction":"WebServerConfig.ps1\\WebServerConfig",
      "octopusDscExtension":"OctopusDSC"
   },
   "resources":[
      {
         "copy":{
            "name":"storageLoop",
            "count":5
         },
         "type":"Microsoft.Storage/storageAccounts",
         "name":"[variables('uniqueStringArray')[copyIndex()]]",
         "location":"[parameters('location')]",
         "apiVersion":"2015-06-15",
         "tags":{
            "displayName":"StorageAccounts"
         },
         "properties":{
            "accountType":"[parameters('storageAccountType')]"
         }
      },
      {
         "type":"Microsoft.Network/publicIPAddresses",
         "name":"[variables('publicIPAddressName')]",
         "apiVersion":"2015-06-15",
         "location":"[parameters('location')]",
         "properties":{
            "publicIPAllocationMethod":"[variables('publicIPAddressType')]",
            "dnsSettings":{
               "domainNameLabel":"[parameters('vmsStackName')]"
            }
         }
      },
      {
         "type":"Microsoft.Network/loadBalancers",
         "name":"[variables('loadBalancerName')]",
         "apiVersion":"2015-06-15",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
         ],
         "properties":{
            "frontendIPConfigurations":[
               {
                  "name":"LoadBalancerFrontEnd",
                  "properties":{
                     "publicIPAddress":{
                        "id":"[variables('publicIPAddressID')]"
                     }
                  }
               }
            ],
            "backendAddressPools":[
               {
                  "name":"LoadBalancerBackEnd"
               }
            ],
            "loadBalancingRules":[
               {
                  "name":"HTTP Traffic",
                  "properties":{
                     "frontendIPConfiguration":{
                        "id":"[variables('frontEndIPConfigID')]"
                     },
                     "backendAddressPool":{
                        "id":"[variables('backEndIPConfigID')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":80,
                     "backendPort":80,
                     "enableFloatingIP":false,
                     "idleTimeoutInMinutes":5,
                     "probe":{
                        "id":"[variables('lbProbeID')]"
                     }
                  }
               }
            ],
            "probes":[
               {
                  "name":"tcpProbe",
                  "properties":{
                     "protocol":"tcp",
                     "port":80,
                     "intervalInSeconds":"5",
                     "numberOfProbes":"2"
                  }
               }
            ],
            "inboundNatPools":[
               {
                  "name":"RDP Traffic",
                  "properties":{
                     "frontendIPConfiguration":{
                        "id":"[variables('frontEndIPConfigID')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":3389,
                     "backendPort":3389,
                     "enableFloatingIP":false
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('virtualNetworkName')]",
         "apiVersion":"2015-06-15",
         "location":"[parameters('location')]",
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('vnetAddressPrefix')]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('subnet1Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet1Prefix')]"
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Compute/virtualMachineScaleSets",
         "name":"[parameters('vmsStackName')]",
         "location":"[variables('location')]",
         "apiVersion":"2015-06-15",
         "dependsOn":[
            "storageLoop",
            "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
            "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
         ],
         "sku":{
            "name":"[parameters('vmSize')]",
            "tier":"Standard",
            "capacity":"[parameters('instanceCount')]"
         },
         "properties":{
            "upgradePolicy":{
               "mode":"Manual"
            },
            "virtualMachineProfile":{
               "storageProfile":{
                  "osDisk":{
                     "vhdContainers":[
                        "[concat('https://', variables('uniqueStringArray')[0], '.blob.core.windows.net/', variables('vhdContainerName'))]",
                        "[concat('https://', variables('uniqueStringArray')[1], '.blob.core.windows.net/', variables('vhdContainerName'))]",
                        "[concat('https://', variables('uniqueStringArray')[2], '.blob.core.windows.net/', variables('vhdContainerName'))]",
                        "[concat('https://', variables('uniqueStringArray')[3], '.blob.core.windows.net/', variables('vhdContainerName'))]",
                        "[concat('https://', variables('uniqueStringArray')[4], '.blob.core.windows.net/', variables('vhdContainerName'))]"
                     ],
                     "name":"[variables('osDiskName')]",
                     "caching":"ReadOnly",
                     "createOption":"FromImage"
                  },
                  "imageReference":"[variables('osType')]"
               },
               "osProfile":{
                  "computerNamePrefix":"[parameters('vmsStackName')]",
                  "adminUsername":"[parameters('adminUsername')]",
                  "adminPassword":"[parameters('adminPassword')]"
               },
               "networkProfile":{
                  "networkInterfaceConfigurations":[
                     {
                        "name":"[variables('nicName')]",
                        "properties":{
                           "primary":true,
                           "ipConfigurations":[
                              {
                                 "name":"[variables('ipConfigName')]",
                                 "properties":{
                                    "subnet":{
                                       "id":"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                                    },
                                    "loadBalancerBackendAddressPools":[
                                       {
                                          "id":"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/LoadBalancerBackEnd')]"
                                       }
                                    ],
                                    "loadBalancerInboundNatPools":[
                                       {
                                          "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', 'RDP Traffic')]"
                                       }
                                    ]
                                 }
                              }
                           ]
                        }
                     }
                  ]
               },
               "extensionProfile":{
                  "extensions":[
                     {
                        "name":"Microsoft.Powershell.DSC",
                        "properties":{
                           "publisher":"Microsoft.Powershell",
                           "type":"DSC",
                           "typeHandlerVersion":"2.15",
                           "autoUpgradeMinorVersion":true,
                           "protectedSettings":{
                              "Items":{
                                 "registrationKeyPrivate":"[parameters('registrationKey')]"
                              }
                           },
                           "settings":{
                              "ModulesUrl":"https://raw.github.com/Azure/azure-quickstart-templates/master/201-vmss-automation-dsc/UpdateLCMforAAPull.zip",
                              "SasToken":"",
                              "ConfigurationFunction":"UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
                              "Properties":[
                                 {
                                    "Name":"RegistrationKey",
                                    "Value":{
                                       "UserName":"PLACEHOLDER_DONOTUSE",
                                       "Password":"PrivateSettingsRef:registrationKeyPrivate"
                                    },
                                    "TypeName":"System.Management.Automation.PSCredential"
                                 },
                                 {
                                    "Name":"RegistrationUrl",
                                    "Value":"[parameters('registrationUrl')]",
                                    "TypeName":"System.String"
                                 }
                              ]
                           }
                        }
                     },
                     {
                        "name":"AzureDiagnostics",
                        "properties":{
                           "publisher":"Microsoft.Azure.Diagnostics",
                           "type":"IaaSDiagnostics",
                           "typeHandlerVersion":"1.5",
                           "autoUpgradeMinorVersion":true,
                           "settings":{
                              "xmlCfg":"[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('vmsStackName'), variables('wadcfgxend')))]",
                              "storageAccount":"[variables('diagnosticsStorageAccountName')]"
                           },
                           "protectedSettings":{
                              "storageAccountName":"[variables('diagnosticsStorageAccountName')]",
                              "storageAccountKey":"[listkeys(variables('accountid'), '2015-06-15').key1]",
                              "storageAccountEndPoint":"https://core.windows.net"
                           }
                        }
                     }
                  ]
               }
            }
         }
      },
      {
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[variables('nicName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                     },
                     "subnet":{
                        "id":"[variables('subnet1Ref')]"
                     }
                  }
               }
            ]
         },
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[parameters('vmName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "hardwareProfile":{
               "vmSize":"[parameters('vmSize')]"
            },
            "osProfile":{
               "computername":"[parameters('vmName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference":"[variables('osType')]",
               "osDisk":{
                  "name":"osdisk",
                  "vhd":{
                     "uri":"[concat('http://',variables('vmStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
                  },
                  "caching":"ReadWrite",
                  "createOption":"FromImage"
               }
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                  }
               ]
            }
         },
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(parameters('vmName'),'/', variables('octopusDscExtension'))]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "publisher":"Microsoft.Compute",
            "type":"CustomScriptExtension",
            "typeHandlerVersion":"1.7",
            "settings":{
               "fileUris":[
                  "https://github.com/tomhall/azure-templates/raw/master/Install-OctopusDSC.ps1"
               ],
               "commandToExecute":"powershell.exe -ExecutionPolicy Unrestricted -File Install-OctopusDSC.ps1"
            }
         },
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(parameters('vmName'),'/webServerConfiguration')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[parameters('location')]",
         "properties":{
            "publisher":"Microsoft.Powershell",
            "type":"DSC",
            "typeHandlerVersion":"2.9",
            "autoUpgradeMinorVersion":true,
            "settings":{
               "ModulesUrl":"[variables('IISPowerShellModuleUrl')]",
               "SasToken":"",
               "ConfigurationFunction":"[variables('IISPowerShellModuleConfigurationFunction')]",
               "Properties":{
                  "ApiKey":"[parameters('octopusApiKey')]",
                  "OctopusServerUrl":"[parameters('octopusServerUrl')]",
                  "Environments":"[parameters('octopusEnvironments')]",
                  "Roles":"[parameters('octopusRoles')]",
                  "MachinePolicy":"[parameters('octopusMachinePolicy')]",
                  "ListenPort":"[parameters('octopusListenPort')]"
               }
            },
            "protectedSettings":null
         },
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), variables('octopusDscExtension'))]"
         ]
      }
   ]
}